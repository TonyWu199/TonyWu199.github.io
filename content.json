{"meta":{"title":"TonyWu199的博客","subtitle":null,"description":null,"author":"TonyWu199","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"环境配置篇-Ubuntu16.04下配置Docker和Go语言","slug":"环境配置篇-Ubuntu16.04下配置Docker和Go语言","date":"2018-06-07T17:51:35.191Z","updated":"2018-06-08T09:29:49.444Z","comments":true,"path":"2018/06/08/环境配置篇-Ubuntu16.04下配置Docker和Go语言/","link":"","permalink":"http://yoursite.com/2018/06/08/环境配置篇-Ubuntu16.04下配置Docker和Go语言/","excerpt":"安装环境：Ubuntu 16.04GO语言版本：1.9 1. 安装curl1.以下两个指令用于安装openssl $sudo1 apt-get install openssl $sudo apt-get isntall libssl-dev 2.下载curl包并安装 用apt-get install和手动安装都可","text":"安装环境：Ubuntu 16.04GO语言版本：1.9 1. 安装curl1.以下两个指令用于安装openssl $sudo1 apt-get install openssl $sudo apt-get isntall libssl-dev 2.下载curl包并安装 用apt-get install和手动安装都可 2. 安装docker和docker-compose1.下载文件的url https://download.docker.com/linux/ubuntu/dists/ 2.解压验证docker是否安装成功 $sudo dpkg -i /DebFile $sudo docker run hello-world 3.安装docker-compose $sudo curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose $sudo chmod +x /usr/local/bin/docker-compose 3.安装go语言1.命令行一口气安装go语言 $curl -O https://storage.googleapis.com/golang/go1.9.linux-amd64.tar.gz $tar -C /usr/local -zxvf go1.9.linux-amd64.tar.gz $mkdir -p ~/go/src $echo &quot;export GOPATH=\\$HOME/go&quot; &gt;&gt; ~/.bashrc $echo &quot;export PATH=\\$PATH:\\$GOPATH/bin:/usr/local/go/bin&quot; &gt;&gt; ~/.bashrc $source ~/.bashrc $go version 这里需要注意的是go的环境变量配置在当前用户的环境变量文件~/.bashrc中，一下两条指令需要在sudo的权限下运行，这时只需要在命令行先敲入sudo -s即可，不必单独配置系统环境变量。 2.为编写chaincode安装必要环境 # go get -u --tags nopkcs11 github.com/hyperledger/fabric/core/chaincode/shim 第一句如果报错： _go: missing Git command. See https://golang.org/s/gogetcmd package github.com/hyperledger/fabric/core/chaincode/shim: exec: &quot;git&quot;: executable file not found in $PATH_ 则使用`apt install git`安装`git`； 如果继续报错： _# cd .; error: RPC failed; curl 56 GnuTLS recv error (-54): Error in the pull function. fatal: The remote end hung up unexpectedly fatal: early EOF fatal: index-pack failed package github.com/hyperledger/fabric/core/chaincode/shim: exit status 128_ 输入指令`git config --global http.postBuffer 524288000` go build --tags nopkcs11 sudo apt install libtool libltdl-dev 4. 下载docker镜像和fabric的可执行文件文件s.sh 12345678910111213141516171819202122232425262728293031323334353637383940414243#!/bin/bash# Copyright IBM Corp. All Rights Reserved.# SPDX-License-Identifier: Apache-2.0# current version of fabric releasedexport VERSION=$&#123;1:-1.0.6&#125;# current version of fabric-ca releasedexport CA_VERSION=$&#123;2:-$VERSION&#125;export ARCH=$(echo \"$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's/mingw64_nt.*/windows/')-$(uname -m | sed 's/x86_64/amd64/g')\" | awk '&#123;print tolower($0)&#125;')#Set MARCH variable i.e ppc64le,s390x,x86_64,i386MARCH=`uname -m`dockerFabricPull() &#123; local FABRIC_TAG=$1 for IMAGES in peer orderer couchdb ccenv javaenv kafka zookeeper tools; do echo \"==&gt; FABRIC IMAGE: $IMAGES\" echo docker pull hyperledger/fabric-$IMAGES:$FABRIC_TAG docker tag hyperledger/fabric-$IMAGES:$FABRIC_TAG hyperledger/fabric-$IMAGES done&#125;dockerCaPull() &#123; local CA_TAG=$1 echo \"==&gt; FABRIC CA IMAGE\" echo docker pull hyperledger/fabric-ca:$CA_TAG docker tag hyperledger/fabric-ca:$CA_TAG hyperledger/fabric-ca&#125;: $&#123;CA_TAG:=\"$MARCH-$CA_VERSION\"&#125;: $&#123;FABRIC_TAG:=\"$MARCH-$VERSION\"&#125;echo \"===&gt; Downloading platform binaries\"curl https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/$&#123;ARCH&#125;-$&#123;VERSION&#125;/hyperledger-fabric-$&#123;ARCH&#125;-$&#123;VERSION&#125;.tar.gz | tar xzecho \"===&gt; Pulling fabric Images\"dockerFabricPull $&#123;FABRIC_TAG&#125;echo \"===&gt; Pulling fabric ca Image\"dockerCaPull $&#123;CA_TAG&#125;echoecho \"===&gt; List out hyperledger docker images\"docker images | grep hyperledger*","categories":[{"name":"环境配置","slug":"环境配置","permalink":"http://yoursite.com/categories/环境配置/"}],"tags":[{"name":"区块链","slug":"区块链","permalink":"http://yoursite.com/tags/区块链/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/tags/Ubuntu/"}]},{"title":"如何搭建我的github+hexo博客","slug":"引言","date":"2018-05-14T12:01:09.366Z","updated":"2018-05-18T09:38:43.691Z","comments":true,"path":"2018/05/14/引言/","link":"","permalink":"http://yoursite.com/2018/05/14/引言/","excerpt":"","text":"花费大约一小时按照教程完成了此博客的搭建。这里将会不定期记录一些自己在过去的学习经验和目前正在学习的知识，起到一个总结和回顾的作用。","categories":[],"tags":[]}]}